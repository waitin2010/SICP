(define (reverse list1)
  (define (reverse-iter list1 sublist)
    (if (not (null? list1))
	(reverse-iter (cdr list1) (cons (car list1) sublist))
	sublist))
  (reverse-iter list1 nil))
(define (reverse2 x)
  (if (pair? x)
      (append (reverse (cdr x)) (list (car x)))
      nil))